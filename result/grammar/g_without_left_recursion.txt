program -> ( 'const' , bType , constDef , argConst , ';' , compUnit ) ( funcType , 'IDN' , '(' , funcFParams , ')' , block , compUnit ) ( $ ) ( varDecl , compUnit )
compUnit -> ( 'const' , bType , constDef , argConst , ';' , compUnit ) ( funcType , 'IDN' , '(' , funcFParams , ')' , block , compUnit ) ( $ ) ( varDecl , compUnit )
argConst -> ( ',' , constDef , argConst ) ( $ )
constDef -> ( 'IDN' , '=' , constInitVal )
constInitVal -> ( constExp )
varDecl -> ( 'int' , varDef , argVarDecl , ';' )
argVarDecl -> ( $ ) ( ',' , varDef , argVarDecl )
varDef -> ( 'IDN' , argVarDef )
argVarDef -> ( '=' , initVal ) ( $ )
initVal -> ( exp )
bType -> ( 'int' )
funcType -> ( 'void' )
funcFParams -> ( $ ) ( 'int' , 'IDN' , argFunctionF )
argFunctionF -> ( ',' , funcFParam , argFunctionF ) ( $ )
funcFParam -> ( bType , 'IDN' )
block -> ( '{' , blockItem , '}' )
blockItem -> ( varDecl , blockItem ) ( stmt , blockItem ) ( 'const' , bType , constDef , argConst , ';' , blockItem ) ( $ )
stmt -> ( ';' ) ( block ) ( exp , ';' ) ( 'return' , argExp , ';' )
argExp -> ( exp ) ( $ )
exp -> ( '(' , exp , ')' , mulExpAtom , addExpAtom , relExpAtom , eqExpAtom , assignExpAtom ) ( 'INT' , mulExpAtom , addExpAtom , relExpAtom , eqExpAtom , assignExpAtom )
primaryExp -> ( 'INT' ) ( '(' , exp , ')' )
unaryExp -> ( primaryExp )
mulExp -> ( '(' , exp , ')' , mulExpAtom ) ( 'INT' , mulExpAtom )
mulExpAtom -> ( '*' , unaryExp , mulExpAtom ) ( '%' , unaryExp , mulExpAtom ) ( '/' , unaryExp , mulExpAtom ) ( $ )
addExp -> ( mulExp , addExpAtom )
addExpAtom -> ( '+' , mulExp , addExpAtom ) ( '-' , mulExp , addExpAtom ) ( $ )
relExp -> ( addExp , relExpAtom )
relExpAtom -> ( '>' , addExp , relExpAtom ) ( '<=' , addExp , relExpAtom ) ( '>=' , addExp , relExpAtom ) ( '<' , addExp , relExpAtom ) ( $ )
eqExp -> ( relExp , eqExpAtom )
eqExpAtom -> ( '==' , relExp , eqExpAtom ) ( $ ) ( '!=' , relExp , eqExpAtom )
assignExpAtom -> ( '=' , eqExp , assignExpAtom ) ( $ )
constExp -> ( '(' , exp , ')' , mulExpAtom , addExpAtom , relExpAtom , eqExpAtom , assignExpAtom ) ( 'INT' , mulExpAtom , addExpAtom , relExpAtom , eqExpAtom , assignExpAtom )

terminals: { '<=' , '+' , '}' , '>=' , 'INT' , '%' , '!' , '==' , '>' , $ , ';' , 'IDN' , 'return' , 'void' , '/' , '!=' , '(' , ')' , '<' , '{' , '=' , 'int' , '-' , ',' , '*' , 'const' }
non_terminals: { eqExp , blockItem , argFunctionF , stmt , initVal , compUnit , argConst , relExp , relExpAtom , constInitVal , constDef , addExp , funcFParam , argExp , unaryExp , bType , addExpAtom , eqExpAtom , argVarDef , funcFParams , block , mulExpAtom , program , primaryExp , funcType , mulExp , assignExpAtom , exp , constExp , varDecl , argVarDecl , varDef }
s: program
first:
follow:
