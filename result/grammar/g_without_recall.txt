Program -> ( 'EOF' ) ( varDecl , decl|funcDef* , 'EOF' ) ( 'const' , bType , constDef , n','constDef* , ';' , decl|funcDef* , 'EOF' ) ( funcType , Ident , '(' , funcFParams? , ')' , block , decl|funcDef* , 'EOF' )
decl|funcDef -> ( varDecl ) ( funcType , Ident , '(' , funcFParams? , ')' , block ) ( 'const' , bType , constDef , n','constDef* , ';' )
decl|funcDef* -> ( $ ) ( decl|funcDef , decl|funcDef* )
n','constDef -> ( ',' , constDef )
n','constDef* -> ( $ ) ( n','constDef , n','constDef* )
bType -> ( 'int' )
constDef -> ( 'idn' , '=' , constInitVal )
constInitVal -> ( constExp )
n','varDef -> ( ',' , varDef )
n','varDef* -> ( $ ) ( n','varDef , n','varDef* )
varDecl -> ( 'int' , varDef , n','varDef* , ';' )
varDef -> ( 'idn' , varDef' )
initVal -> ( exp )
funcFParams? -> ( $ ) ( 'int' , Ident , n','funcFParam* )
funcType -> ( 'int' ) ( 'void' )
n','funcFParam -> ( ',' , funcFParam )
n','funcFParam* -> ( n','funcFParam , n','funcFParam* ) ( $ )
funcFParam -> ( bType , Ident )
blockItem -> ( block ) ( lVal , '=' , exp , ';' ) ( 'return' , exp? , ';' ) ( varDecl ) ( 'const' , bType , constDef , n','constDef* , ';' ) ( exp , ';' ) ( ';' )
blockItem* -> ( $ ) ( blockItem , blockItem* )
block -> ( '{' , blockItem* , '}' )
exp? -> ( exp ) ( $ )
exp -> ( addExp )
lVal -> ( 'idn' )
primaryExp -> ( 'idn' ) ( 'int' ) ( '(' , exp , ')' )
funcRParams? -> ( '!' , unaryExp , mulExp' , addExp' , n','funcRParam* ) ( '-' , unaryExp , mulExp' , addExp' , n','funcRParam* ) ( 'idn' , funcRParams?' ) ( $ ) ( '+' , unaryExp , mulExp' , addExp' , n','funcRParam* ) ( 'int' , mulExp' , addExp' , n','funcRParam* ) ( '(' , exp , ')' , mulExp' , addExp' , n','funcRParam* )
unaryExp -> ( primaryExp ) ( unaryOp , unaryExp ) ( 'idn' , '(' , funcRParams? , ')' )
unaryOp -> ( '!' ) ( '-' ) ( '+' )
n','funcRParam* -> ( $ ) ( ',' , funcRParam , n','funcRParam* )
funcRParam -> ( exp )
n'*'|'/'|'%' -> ( '%' ) ( '/' ) ( '*' )
mulExp -> ( '!' , unaryExp , mulExp' ) ( 'idn' , '(' , funcRParams? , ')' , mulExp' ) ( '+' , unaryExp , mulExp' ) ( '-' , unaryExp , mulExp' ) ( primaryExp , mulExp' )
n'+'|'-' -> ( '-' ) ( '+' )
addExp -> ( primaryExp , mulExp' , addExp' ) ( 'idn' , '(' , funcRParams? , ')' , mulExp' , addExp' ) ( '-' , unaryExp , mulExp' , addExp' ) ( '!' , unaryExp , mulExp' , addExp' ) ( '+' , unaryExp , mulExp' , addExp' )
constExp -> ( addExp )
Ident -> ( 'idn' )
mulExp' -> ( n'*'|'/'|'%' , unaryExp , mulExp' ) ( $ )
addExp' -> ( $ ) ( n'+'|'-' , mulExp , addExp' )
varDef' -> ( '=' , initVal ) ( $ )
funcRParams?' -> ( mulExp' , addExp' , n','funcRParam* ) ( '(' , funcRParams? , ')' , mulExp' , addExp' , n','funcRParam* )

terminals: { '<=' , 'const' , '!' , '(' , '||' , '=' , '%' , 'return' , 'void' , '>' , '}' , ';' , 'int' , 'EOF' , '{' , '*' , '<' , '/' , ')' , '==' , '&&' , '!=' , 'idn' , ',' , '>=' , '-' , '+' , $ }
non_terminals: { initVal , constInitVal , funcRParams?' , blockItem* , exp? , funcRParam , Ident , unaryExp , funcFParam , decl|funcDef* , blockItem , n','constDef* , n'*'|'/'|'%' , varDef' , constExp , n','funcFParam* , exp , unaryOp , mulExp , addExp , varDef , decl|funcDef , lVal , primaryExp , n','varDef* , block , n','varDef , bType , n','funcRParam* , funcFParams? , n','constDef , mulExp' , Program , addExp' , constDef , n'+'|'-' , varDecl , n','funcFParam , funcType , funcRParams? }
s: Program
first:
follow:
