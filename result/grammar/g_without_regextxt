Program -> ( compUnit )
decl|funcDef -> ( funcDef ) ( decl )
decl|funcDef* -> ( $ ) ( decl|funcDef , decl|funcDef* )
compUnit -> ( decl|funcDef* , 'EOF' )
decl -> ( varDecl ) ( constDecl )
n','constDef -> ( ',' , constDef )
n','constDef* -> ( $ ) ( n','constDef , n','constDef* )
constDecl -> ( 'const' , bType , constDef , n','constDef* , ';' )
bType -> ( 'int' )
constDef -> ( Ident , '=' , constInitVal )
constInitVal -> ( constExp )
n','varDef -> ( ',' , varDef )
n','varDef* -> ( n','varDef , n','varDef* ) ( $ )
varDecl -> ( bType , varDef , n','varDef* , ';' )
varDef -> ( Ident , '=' , initVal ) ( Ident )
initVal -> ( exp )
funcFParams? -> ( funcFParams ) ( $ )
funcDef -> ( funcType , Ident , '(' , funcFParams? , ')' , block )
funcType -> ( 'int' ) ( 'void' )
n','funcFParam -> ( ',' , funcFParam )
n','funcFParam* -> ( $ ) ( n','funcFParam , n','funcFParam* )
funcFParams -> ( funcFParam , n','funcFParam* )
funcFParam -> ( bType , Ident )
blockItem -> ( stmt ) ( decl )
blockItem* -> ( $ ) ( blockItem , blockItem* )
block -> ( '{' , blockItem* , '}' )
exp? -> ( $ ) ( exp )
stmt -> ( lVal , '=' , exp , ';' ) ( exp? , ';' ) ( 'return' , exp? , ';' ) ( block )
exp -> ( addExp )
cond -> ( lOrExp )
lVal -> ( Ident )
primaryExp -> ( '(' , exp , ')' ) ( lVal ) ( number )
number -> ( IntConst )
funcRParams? -> ( funcRParams ) ( $ )
unaryExp -> ( unaryOp , unaryExp ) ( primaryExp ) ( Ident , '(' , funcRParams? , ')' )
unaryOp -> ( '-' ) ( '!' ) ( '+' )
n','funcRParam -> ( ',' , funcRParam )
n','funcRParam* -> ( $ ) ( n','funcRParam , n','funcRParam* )
funcRParams -> ( funcRParam , n','funcRParam* )
funcRParam -> ( exp )
n'*'|'/'|'%' -> ( '%' ) ( '/' ) ( '*' )
mulExp -> ( mulExp , n'*'|'/'|'%' , unaryExp ) ( unaryExp )
n'+'|'-' -> ( '-' ) ( '+' )
addExp -> ( addExp , n'+'|'-' , mulExp ) ( mulExp )
n'<'|'>'|'<='|'>=' -> ( '<' ) ( '>=' ) ( '>' ) ( '<=' )
relExp -> ( relExp , n'<'|'>'|'<='|'>=' , addExp ) ( addExp )
n'=='|'!=' -> ( '!=' ) ( '==' )
eqExp -> ( eqExp , n'=='|'!=' , relExp ) ( relExp )
lAndExp -> ( eqExp ) ( lAndExp , '&&' , eqExp )
lOrExp -> ( lOrExp , '||' , lAndExp ) ( lAndExp )
constExp -> ( addExp )
IntConst -> ( 'int' )
Ident -> ( 'idn' )

terminals: '<=' $ '{' 'EOF' '>' '!=' '-' 'idn' '/' 'int' '!' '>=' 'return' '==' ';' '||' '&&' ')' '*' '+' '(' 'const' '%' '=' 'void' '<' '}' ','
non_terminals: Program addExp primaryExp lOrExp n'*'|'/'|'%' n','funcFParam compUnit exp? number funcRParam n'=='|'!=' lAndExp IntConst eqExp blockItem* block funcType blockItem constDecl constInitVal lVal relExp decl|funcDef* funcRParams funcDef n'+'|'-' exp constDef unaryOp n','funcRParam n'<'|'>'|'<='|'>=' constExp n','funcFParam* n','varDef funcFParam initVal mulExp stmt n','constDef varDecl bType cond n','varDef* Ident funcRParams? n','funcRParam* decl|funcDef varDef funcFParams unaryExp decl funcFParams? n','constDef*
s: Program
